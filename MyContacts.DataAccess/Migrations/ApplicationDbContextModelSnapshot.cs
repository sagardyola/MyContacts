// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyContacts.DataAccess.Data;

#nullable disable

namespace MyContacts.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MyContacts.DataAccess.ContactDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<int?>("LabelId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LabelId");

                    b.ToTable("ContactDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "8B Court Parade, HA0 3HY",
                            DateCreated = new DateTime(2022, 4, 6, 14, 17, 38, 668, DateTimeKind.Local).AddTicks(5746),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sagar",
                            IsDeleted = false,
                            IsPublished = true,
                            LabelId = 2,
                            LastName = "Dyola",
                            Notes = "Nothing for now"
                        },
                        new
                        {
                            Id = 2,
                            Address = "8A Court Parade, HA0 3HY",
                            DateCreated = new DateTime(2022, 4, 6, 14, 17, 38, 668, DateTimeKind.Local).AddTicks(5796),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sunita",
                            IsDeleted = false,
                            IsPublished = true,
                            LabelId = 3,
                            LastName = "Ghale",
                            Notes = "Hey this is Sunita Ghale"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Lagankhel, Nepal",
                            DateCreated = new DateTime(2022, 4, 6, 14, 17, 38, 668, DateTimeKind.Local).AddTicks(5800),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Surya Lal",
                            IsDeleted = false,
                            IsPublished = true,
                            LabelId = 1,
                            LastName = "Dyola",
                            Notes = "Surya here. Nothing for now"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Lagankhel, Nepal",
                            DateCreated = new DateTime(2022, 4, 6, 14, 17, 38, 668, DateTimeKind.Local).AddTicks(5803),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sumitra",
                            IsDeleted = false,
                            IsPublished = true,
                            LabelId = 2,
                            LastName = "Dyola",
                            Notes = "Sumitra here. Nothing for now"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Lagankhel, Nepal",
                            DateCreated = new DateTime(2022, 4, 6, 14, 17, 38, 668, DateTimeKind.Local).AddTicks(5807),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sunita",
                            IsDeleted = false,
                            IsPublished = true,
                            LabelId = 3,
                            LastName = "Dyola",
                            Notes = "Sunita here. Nothing for now"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Samakhushi, Nepal",
                            DateCreated = new DateTime(2022, 4, 6, 14, 17, 38, 668, DateTimeKind.Local).AddTicks(5811),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Subita",
                            IsDeleted = false,
                            IsPublished = true,
                            LabelId = 1,
                            LastName = "Ghale",
                            Notes = "Subita here. Nothing for now"
                        });
                });

            modelBuilder.Entity("MyContacts.DataAccess.ContactNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ContactDetailId")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactDetailId");

                    b.ToTable("ContactNumbers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactDetailId = 1,
                            Number = "+447470855303",
                            Title = "Mobile"
                        },
                        new
                        {
                            Id = 2,
                            ContactDetailId = 1,
                            Number = "+97715536178",
                            Title = "Home"
                        },
                        new
                        {
                            Id = 3,
                            ContactDetailId = 1,
                            Number = "+9779841751478",
                            Title = "Mobile (Nepal)"
                        },
                        new
                        {
                            Id = 4,
                            ContactDetailId = 2,
                            Number = "+447727353665",
                            Title = "Mobile"
                        },
                        new
                        {
                            Id = 5,
                            ContactDetailId = 2,
                            Number = "+97714983404",
                            Title = "Home"
                        },
                        new
                        {
                            Id = 6,
                            ContactDetailId = 3,
                            Number = "+9779851085563",
                            Title = "Mobile"
                        },
                        new
                        {
                            Id = 7,
                            ContactDetailId = 4,
                            Number = "+9779841520663",
                            Title = "Mobile"
                        },
                        new
                        {
                            Id = 8,
                            ContactDetailId = 5,
                            Number = "+9779843335072",
                            Title = "Mobile"
                        },
                        new
                        {
                            Id = 9,
                            ContactDetailId = 6,
                            Number = "+9779810357026",
                            Title = "Mobile"
                        });
                });

            modelBuilder.Entity("MyContacts.DataAccess.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LabelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Labels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LabelName = "Family"
                        },
                        new
                        {
                            Id = 2,
                            LabelName = "School Friends"
                        },
                        new
                        {
                            Id = 3,
                            LabelName = "Colleagues"
                        });
                });

            modelBuilder.Entity("MyContacts.DataAccess.ContactDetail", b =>
                {
                    b.HasOne("MyContacts.DataAccess.Label", "Label")
                        .WithMany()
                        .HasForeignKey("LabelId");

                    b.Navigation("Label");
                });

            modelBuilder.Entity("MyContacts.DataAccess.ContactNumber", b =>
                {
                    b.HasOne("MyContacts.DataAccess.ContactDetail", "ContactDetail")
                        .WithMany("ContactNumbers")
                        .HasForeignKey("ContactDetailId");

                    b.Navigation("ContactDetail");
                });

            modelBuilder.Entity("MyContacts.DataAccess.ContactDetail", b =>
                {
                    b.Navigation("ContactNumbers");
                });
#pragma warning restore 612, 618
        }
    }
}
